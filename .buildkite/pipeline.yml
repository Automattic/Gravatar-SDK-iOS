# yaml-language-server: $schema=https://raw.githubusercontent.com/buildkite/pipeline-schema/main/schema.json
---

# Variables used in this pipeline are defined in `shared-pipeline-vars`, which is `source`'d before calling `buidkite-agent pipeline upload`

agents:
  queue: "mac"
env:
  IMAGE_ID: $CURRENT_IMAGE_ID

##################
# Reusabled Blocks
##################
validate_pods: &validate_pods
  command: |
    .buildkite/commands/validate-pods.sh
  plugins: [$CI_TOOLKIT]

demo_build_swiftUI: &demo_build_swiftUI
  plugins: [$CI_TOOLKIT]
  command: |
    install_gems
    BUILD_NUMBER=$BUILDKITE_BUILD_NUMBER make build-demo-for-distribution-swiftui

demo_build_uikit: &demo_build_uikit
  plugins: [$CI_TOOLKIT]
  command: |
    install_gems
    BUILD_NUMBER=$BUILDKITE_BUILD_NUMBER make build-demo-for-distribution-uikit

steps:
  #################
  # Lint Source files
  #################
  - label: "üïµÔ∏è Lint"
    key: "lint"
    command: |
      echo "--- üõ† Linting"
      make lint

  #################
  # Build and Test
  #################
  - group: "üì¶ Build and Test Swift Package"
    steps:
      - label: "üì¶ Build and Test Swift Package ($CURRENT_SWIFT_VERSION)"
        command: |
          validate_swift_package test device_model:"$CURRENT_DEVICE" os:"$CURRENT_OS"
        key: "test"
        env:
          IMAGE_ID: "$CURRENT_IMAGE_ID"
        plugins: [$CI_TOOLKIT]

      - label: "üì¶ Build and Test Swift Package ($SWIFT_5_9_VERSION)"
        command: |
          validate_swift_package test device_model:"$SWIFT_5_9_DEVICE" os:"$SWIFT_5_9_OS"
        key: "test_swift_5_9"
        env:
          IMAGE_ID: "$SWIFT_5_9_IMAGE_ID"
        plugins: [$CI_TOOLKIT]

      - label: "üì¶ Build and Test Swift Package ($SWIFT_6_0_VERSION)"
        command: |
          validate_swift_package test device_model:"$SWIFT_6_0_DEVICE" os:"$SWIFT_6_0_OS"
        key: "test_swift_6_0"
        env:
          IMAGE_ID: "$SWIFT_6_0_IMAGE_ID"
        plugins: [$CI_TOOLKIT]

  ###################
  # Validate Podspec
  ###################
  - group: "üî¨ Validate Podspecs"
    steps:
      - <<: *validate_pods
        label: "üî¨ Validate Podspecs ($CURRENT_SWIFT_VERSION)"
        key: "validate"
        env:
          IMAGE_ID: "$CURRENT_IMAGE_ID"

      - <<: *validate_pods
        label: "üî¨ Validate Podspecs ($SWIFT_5_9_VERSION)"
        env:
          IMAGE_ID: "$SWIFT_5_9_IMAGE_ID"

      - <<: *validate_pods
        label: "üî¨ Validate Podspecs ($SWIFT_6_0_VERSION)"
        env:
          IMAGE_ID: "$SWIFT_6_0_IMAGE_ID"

  #######################
  # Publish the Podspecs (if we're building a tag)
  #######################
  - label: "‚¨ÜÔ∏è Publish Podspecs"
    key: "publish"
    command: |
      .buildkite/commands/publish-pod.sh "Gravatar.podspec"
      .buildkite/commands/publish-pod.sh "GravatarUI.podspec"
    plugins: [$CI_TOOLKIT]
    depends_on:
      - "test"
      - "validate"
      - "lint"
    if: build.tag != null

  ###################
  # Prototype Builds of Demo Projects
  ###################
  - group: "üõ†Ô∏è Build SwiftUI Demo"
    steps:
      ###################
      # Build/Upload SwiftUI Demo
      ###################
      - <<: *demo_build_swiftUI
        label: "üõ†Ô∏è Build SwiftUI Demo"
        key: build_swiftui
        depends_on: test
        env:
          IMAGE_ID: "$CURRENT_IMAGE_ID"
        artifact_paths: # Archive artifacts only for the production version of Swift
          - ".build/artifacts/*.ipa"
          - ".build/artifacts/*.dSYM.zip"

      - <<: *demo_build_swiftUI
        label: "üõ†Ô∏è Build SwiftUI Demo ($SWIFT_5_9_VERSION)"
        depends_on: test_swift_5_9
        env:
          IMAGE_ID: "$SWIFT_5_9_IMAGE_ID"

      - <<: *demo_build_swiftUI
        label: "üõ†Ô∏è Build SwiftUI Demo ($SWIFT_6_0_VERSION)"
        depends_on: test_swift_6_0
        env:
          IMAGE_ID: "$SWIFT_6_0_IMAGE_ID"

      - label: "‚¨ÜÔ∏è Upload SwiftUI Demo to App Center"
        depends_on: build_swiftui
        plugins: [$CI_TOOLKIT]
        command: .buildkite/commands/upload-to-appcenter.sh SwiftUI
        if: build.pull_request.id != null

      ###################
      # Build/Upload UIKit Demo
      ###################
      - <<: *demo_build_uikit
        label: "üõ†Ô∏è Build UIKit Demo"
        key: build_uikit
        depends_on: test
        env:
          IMAGE_ID: "$CURRENT_IMAGE_ID"
        artifact_paths: # Archive artifacts only for the production version of Swift
          - ".build/artifacts/*.ipa"
          - ".build/artifacts/*.dSYM.zip"

      - <<: *demo_build_uikit
        label: "üõ†Ô∏è Build UIKit Demo ($SWIFT_5_9_VERSION)"
        key: build_uikit_swift_5_9
        depends_on: test_swift_5_9
        env:
          IMAGE_ID: "$SWIFT_5_9_IMAGE_ID"

      - <<: *demo_build_uikit
        label: "üõ†Ô∏è Build UIKit Demo ($SWIFT_6_0_VERSION)"
        key: build_uikit_swift_6_0
        depends_on: test_swift_6_0
        env:
          IMAGE_ID: "$SWIFT_6_0_IMAGE_ID"

      - label: "‚¨ÜÔ∏è Upload UIKit Demo to App Center"
        depends_on: build_uikit
        plugins: [$CI_TOOLKIT]
        command: .buildkite/commands/upload-to-appcenter.sh UIKit
        if: build.pull_request.id != null
