# yaml-language-server: $schema=https://raw.githubusercontent.com/buildkite/pipeline-schema/main/schema.json
---

# Variables used in this pipeline are defined in `shared-pipeline-vars`, which is `source`'d before calling `buidkite-agent pipeline upload`

agents:
  queue: "mac"
env:
  IMAGE_ID: $IMAGE_ID

steps:
  #################
  # Lint Source files
  #################
  - label: "üïµÔ∏è Lint"
    key: "lint"
    command: |
      echo "--- üõ† Linting"
      make lint

  #################
  # Build and Test
  #################
  - label: "üì¶ Build and Test Swift Package"
    key: "test"
    command: |
      validate_swift_package
    plugins: [$CI_TOOLKIT]

  ###################
  # Validate Podspec
  ###################
  - label: "üî¨ Validate Podspecs"
    key: "validate"
    command: |
      .buildkite/commands/validate-pods.sh
    plugins: [$CI_TOOLKIT]

  #######################
  # Publish the Podspecs (if we're building a tag)
  #######################
  - label: "‚¨ÜÔ∏è Publish Podspecs"
    key: "publish"
    command: |
      .buildkite/commands/publish-pod.sh "Gravatar.podspec"
      .buildkite/commands/publish-pod.sh "GravatarUI.podspec"
      .buildkite/commands/publish-pod.sh "GravatarOpenAPIClient.podspec"
    plugins: [$CI_TOOLKIT]
    depends_on:
      - "test"
      - "test_demo"
      - "validate"
      - "lint"
    if: build.tag != null

  ###################
  # Prototype Builds of Demo Projects
  ###################
  - group: ":appcenter: Prototype Builds"
    steps:
      - label: "üõ†Ô∏è Build SwiftUI Demo"
        key: build_swiftui
        depends_on: test
        plugins: [$CI_TOOLKIT]
        command: |
          install_gems
          BUILD_NUMBER=$BUILDKITE_BUILD_NUMBER make build-demo-for-distribution-swiftui
        artifact_paths:
          - ".build/artifacts/*.ipa"
          - ".build/artifacts/*.dSYM.zip"

      - label: "‚¨ÜÔ∏è Upload SwiftUI Demo to App Center"
        depends_on: build_swiftui
        plugins: [$CI_TOOLKIT]
        command: .buildkite/commands/upload-to-appcenter.sh SwiftUI
        if: build.pull_request.id != null

      - label: "üõ†Ô∏è Build UIKit Demo"
        key: build_uikit
        depends_on: test
        plugins: [$CI_TOOLKIT]
        command: |
          install_gems
          BUILD_NUMBER=$BUILDKITE_BUILD_NUMBER make build-demo-for-distribution-uikit
        artifact_paths:
          - ".build/artifacts/*.ipa"
          - ".build/artifacts/*.dSYM.zip"

      - label: "‚¨ÜÔ∏è Upload UIKit Demo to App Center"
        depends_on: build_uikit
        plugins: [$CI_TOOLKIT]
        command: .buildkite/commands/upload-to-appcenter.sh UIKit
        if: build.pull_request.id != null
