// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.URL
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
#else
import struct Foundation.URL
import struct Foundation.Data
import struct Foundation.Date
#endif
/// A type that performs HTTP operations defined by the OpenAPI document.
internal protocol APIProtocol: Sendable {
    /// Get profile by identifier
    ///
    /// Returns a profile by the given identifier.
    ///
    /// - Remark: HTTP `GET /profiles/{profileIdentifier}`.
    /// - Remark: Generated from `#/paths//profiles/{profileIdentifier}/get(getProfileById)`.
    func getProfileById(_ input: Operations.getProfileById.Input) async throws -> Operations.getProfileById.Output
}

/// Convenience overloads for operation inputs.
extension APIProtocol {
    /// Get profile by identifier
    ///
    /// Returns a profile by the given identifier.
    ///
    /// - Remark: HTTP `GET /profiles/{profileIdentifier}`.
    /// - Remark: Generated from `#/paths//profiles/{profileIdentifier}/get(getProfileById)`.
    internal func getProfileById(
        path: Operations.getProfileById.Input.Path,
        headers: Operations.getProfileById.Input.Headers = .init()
    ) async throws -> Operations.getProfileById.Output {
        try await getProfileById(Operations.getProfileById.Input(
            path: path,
            headers: headers
        ))
    }
}

/// Server URLs defined in the OpenAPI document.
internal enum Servers {
    /// Production server
    internal static func server1() throws -> Foundation.URL {
        try Foundation.URL(
            validatingOpenAPIServerURL: "https://api.gravatar.com/v3",
            variables: []
        )
    }
}

/// Types generated from the components section of the OpenAPI document.
internal enum Components {
    /// Types generated from the `#/components/schemas` section of the OpenAPI document.
    internal enum Schemas {
        /// A link the user has added to their profile.
        ///
        /// - Remark: Generated from `#/components/schemas/Link`.
        internal struct Link: Codable, Hashable, Sendable {
            /// The label for the link.
            ///
            /// - Remark: Generated from `#/components/schemas/Link/label`.
            internal var label: Swift.String
            /// The URL to the link.
            ///
            /// - Remark: Generated from `#/components/schemas/Link/url`.
            internal var url: Swift.String
            /// Creates a new `Link`.
            ///
            /// - Parameters:
            ///   - label: The label for the link.
            ///   - url: The URL to the link.
            internal init(
                label: Swift.String,
                url: Swift.String
            ) {
                self.label = label
                self.url = url
            }
            internal enum CodingKeys: String, CodingKey {
                case label
                case url
            }
        }
        /// A crypto currency wallet address the user accepts.
        ///
        /// - Remark: Generated from `#/components/schemas/CryptoWalletAddress`.
        internal struct CryptoWalletAddress: Codable, Hashable, Sendable {
            /// The label for the crypto currency.
            ///
            /// - Remark: Generated from `#/components/schemas/CryptoWalletAddress/label`.
            internal var label: Swift.String
            /// The wallet address for the crypto currency.
            ///
            /// - Remark: Generated from `#/components/schemas/CryptoWalletAddress/address`.
            internal var address: Swift.String
            /// Creates a new `CryptoWalletAddress`.
            ///
            /// - Parameters:
            ///   - label: The label for the crypto currency.
            ///   - address: The wallet address for the crypto currency.
            internal init(
                label: Swift.String,
                address: Swift.String
            ) {
                self.label = label
                self.address = address
            }
            internal enum CodingKeys: String, CodingKey {
                case label
                case address
            }
        }
        /// A verified account on a user's profile.
        ///
        /// - Remark: Generated from `#/components/schemas/VerifiedAccount`.
        internal struct VerifiedAccount: Codable, Hashable, Sendable {
            /// The name of the service.
            ///
            /// - Remark: Generated from `#/components/schemas/VerifiedAccount/service_label`.
            internal var service_label: Swift.String
            /// The URL to the service's icon.
            ///
            /// - Remark: Generated from `#/components/schemas/VerifiedAccount/service_icon`.
            internal var service_icon: Swift.String
            /// The URL to the user's profile on the service.
            ///
            /// - Remark: Generated from `#/components/schemas/VerifiedAccount/url`.
            internal var url: Swift.String
            /// Creates a new `VerifiedAccount`.
            ///
            /// - Parameters:
            ///   - service_label: The name of the service.
            ///   - service_icon: The URL to the service's icon.
            ///   - url: The URL to the user's profile on the service.
            internal init(
                service_label: Swift.String,
                service_icon: Swift.String,
                url: Swift.String
            ) {
                self.service_label = service_label
                self.service_icon = service_icon
                self.url = url
            }
            internal enum CodingKeys: String, CodingKey {
                case service_label
                case service_icon
                case url
            }
        }
        /// A gallery image a user has uploaded.
        ///
        /// - Remark: Generated from `#/components/schemas/GalleryImage`.
        internal struct GalleryImage: Codable, Hashable, Sendable {
            /// The URL to the image.
            ///
            /// - Remark: Generated from `#/components/schemas/GalleryImage/url`.
            internal var url: Swift.String
            /// Creates a new `GalleryImage`.
            ///
            /// - Parameters:
            ///   - url: The URL to the image.
            internal init(url: Swift.String) {
                self.url = url
            }
            internal enum CodingKeys: String, CodingKey {
                case url
            }
        }
        /// A user's profile information.
        ///
        /// - Remark: Generated from `#/components/schemas/Profile`.
        internal struct Profile: Codable, Hashable, Sendable {
            /// The SHA256 hash of the user's primary email address.
            ///
            /// - Remark: Generated from `#/components/schemas/Profile/hash`.
            internal var hash: Swift.String
            /// The user's display name. This is the name that is displayed on their profile.
            ///
            /// - Remark: Generated from `#/components/schemas/Profile/display_name`.
            internal var display_name: Swift.String
            /// The full URL for the user's profile.
            ///
            /// - Remark: Generated from `#/components/schemas/Profile/profile_url`.
            internal var profile_url: Swift.String
            /// The URL for the user's avatar image if it has been set.
            ///
            /// - Remark: Generated from `#/components/schemas/Profile/avatar_url`.
            internal var avatar_url: Swift.String
            /// The alt text for the user's avatar image if it has been set.
            ///
            /// - Remark: Generated from `#/components/schemas/Profile/avatar_alt_text`.
            internal var avatar_alt_text: Swift.String
            /// The user's location.
            ///
            /// - Remark: Generated from `#/components/schemas/Profile/location`.
            internal var location: Swift.String
            /// The about section on a user's profile.
            ///
            /// - Remark: Generated from `#/components/schemas/Profile/description`.
            internal var description: Swift.String
            /// The user's job title.
            ///
            /// - Remark: Generated from `#/components/schemas/Profile/job_title`.
            internal var job_title: Swift.String
            /// The user's current company's name.
            ///
            /// - Remark: Generated from `#/components/schemas/Profile/company`.
            internal var company: Swift.String
            /// A list of verified accounts the user has added to their profile. This is limited to a max of 4 in unauthenticated requests.
            ///
            /// - Remark: Generated from `#/components/schemas/Profile/verified_accounts`.
            internal var verified_accounts: [Components.Schemas.VerifiedAccount]
            /// The phonetic pronunciation of the user's name.
            ///
            /// - Remark: Generated from `#/components/schemas/Profile/pronunciation`.
            internal var pronunciation: Swift.String
            /// The pronouns the user uses.
            ///
            /// - Remark: Generated from `#/components/schemas/Profile/pronouns`.
            internal var pronouns: Swift.String
            /// A list of links the user has added to their profile. This is only provided in authenticated API requests.
            ///
            /// - Remark: Generated from `#/components/schemas/Profile/links`.
            internal var links: [Components.Schemas.Link]?
            /// The user's public payment information. This is only provided in authenticated API requests.
            ///
            /// - Remark: Generated from `#/components/schemas/Profile/payments`.
            internal struct paymentsPayload: Codable, Hashable, Sendable {
                /// A list of payment URLs the user has added to their profile.
                ///
                /// - Remark: Generated from `#/components/schemas/Profile/payments/links`.
                internal var links: [Components.Schemas.Link]
                /// A list of crypto currencies the user accepts.
                ///
                /// - Remark: Generated from `#/components/schemas/Profile/payments/crypto_wallets`.
                internal var crypto_wallets: [Components.Schemas.CryptoWalletAddress]
                /// Creates a new `paymentsPayload`.
                ///
                /// - Parameters:
                ///   - links: A list of payment URLs the user has added to their profile.
                ///   - crypto_wallets: A list of crypto currencies the user accepts.
                internal init(
                    links: [Components.Schemas.Link],
                    crypto_wallets: [Components.Schemas.CryptoWalletAddress]
                ) {
                    self.links = links
                    self.crypto_wallets = crypto_wallets
                }
                internal enum CodingKeys: String, CodingKey {
                    case links
                    case crypto_wallets
                }
            }
            /// The user's public payment information. This is only provided in authenticated API requests.
            ///
            /// - Remark: Generated from `#/components/schemas/Profile/payments`.
            internal var payments: Components.Schemas.Profile.paymentsPayload?
            /// The user's contact information. This is only available if the user has chosen to make it public. This is only provided in authenticated API requests.
            ///
            /// - Remark: Generated from `#/components/schemas/Profile/contact_info`.
            internal struct contact_infoPayload: Codable, Hashable, Sendable {
                /// The user's home phone number.
                ///
                /// - Remark: Generated from `#/components/schemas/Profile/contact_info/home_phone`.
                internal var home_phone: Swift.String?
                /// The user's work phone number.
                ///
                /// - Remark: Generated from `#/components/schemas/Profile/contact_info/work_phone`.
                internal var work_phone: Swift.String?
                /// The user's cell phone number.
                ///
                /// - Remark: Generated from `#/components/schemas/Profile/contact_info/cell_phone`.
                internal var cell_phone: Swift.String?
                /// The user's email address as provided on the contact section of the profile. Might differ from their account emails.
                ///
                /// - Remark: Generated from `#/components/schemas/Profile/contact_info/email`.
                internal var email: Swift.String?
                /// The URL to the user's contact form.
                ///
                /// - Remark: Generated from `#/components/schemas/Profile/contact_info/contact_form`.
                internal var contact_form: Swift.String?
                /// The URL to the user's calendar.
                ///
                /// - Remark: Generated from `#/components/schemas/Profile/contact_info/calendar`.
                internal var calendar: Swift.String?
                /// Creates a new `contact_infoPayload`.
                ///
                /// - Parameters:
                ///   - home_phone: The user's home phone number.
                ///   - work_phone: The user's work phone number.
                ///   - cell_phone: The user's cell phone number.
                ///   - email: The user's email address as provided on the contact section of the profile. Might differ from their account emails.
                ///   - contact_form: The URL to the user's contact form.
                ///   - calendar: The URL to the user's calendar.
                internal init(
                    home_phone: Swift.String? = nil,
                    work_phone: Swift.String? = nil,
                    cell_phone: Swift.String? = nil,
                    email: Swift.String? = nil,
                    contact_form: Swift.String? = nil,
                    calendar: Swift.String? = nil
                ) {
                    self.home_phone = home_phone
                    self.work_phone = work_phone
                    self.cell_phone = cell_phone
                    self.email = email
                    self.contact_form = contact_form
                    self.calendar = calendar
                }
                internal enum CodingKeys: String, CodingKey {
                    case home_phone
                    case work_phone
                    case cell_phone
                    case email
                    case contact_form
                    case calendar
                }
            }
            /// The user's contact information. This is only available if the user has chosen to make it public. This is only provided in authenticated API requests.
            ///
            /// - Remark: Generated from `#/components/schemas/Profile/contact_info`.
            internal var contact_info: Components.Schemas.Profile.contact_infoPayload?
            /// Additional images a user has uploaded. This is only provided in authenticated API requests.
            ///
            /// - Remark: Generated from `#/components/schemas/Profile/gallery`.
            internal var gallery: [Components.Schemas.GalleryImage]?
            /// The number of verified accounts the user has added to their profile. This count includes verified accounts the user is hiding from their profile. This is only provided in authenticated API requests.
            ///
            /// - Remark: Generated from `#/components/schemas/Profile/number_verified_accounts`.
            internal var number_verified_accounts: Swift.Int?
            /// The date and time (UTC) the user last edited their profile. This is only provided in authenticated API requests.
            ///
            /// - Remark: Generated from `#/components/schemas/Profile/last_profile_edit`.
            internal var last_profile_edit: Foundation.Date?
            /// The date the user registered their account. This is only provided in authenticated API requests.
            ///
            /// - Remark: Generated from `#/components/schemas/Profile/registration_date`.
            internal var registration_date: Swift.String?
            /// Creates a new `Profile`.
            ///
            /// - Parameters:
            ///   - hash: The SHA256 hash of the user's primary email address.
            ///   - display_name: The user's display name. This is the name that is displayed on their profile.
            ///   - profile_url: The full URL for the user's profile.
            ///   - avatar_url: The URL for the user's avatar image if it has been set.
            ///   - avatar_alt_text: The alt text for the user's avatar image if it has been set.
            ///   - location: The user's location.
            ///   - description: The about section on a user's profile.
            ///   - job_title: The user's job title.
            ///   - company: The user's current company's name.
            ///   - verified_accounts: A list of verified accounts the user has added to their profile. This is limited to a max of 4 in unauthenticated requests.
            ///   - pronunciation: The phonetic pronunciation of the user's name.
            ///   - pronouns: The pronouns the user uses.
            ///   - links: A list of links the user has added to their profile. This is only provided in authenticated API requests.
            ///   - payments: The user's public payment information. This is only provided in authenticated API requests.
            ///   - contact_info: The user's contact information. This is only available if the user has chosen to make it public. This is only provided in authenticated API requests.
            ///   - gallery: Additional images a user has uploaded. This is only provided in authenticated API requests.
            ///   - number_verified_accounts: The number of verified accounts the user has added to their profile. This count includes verified accounts the user is hiding from their profile. This is only provided in authenticated API requests.
            ///   - last_profile_edit: The date and time (UTC) the user last edited their profile. This is only provided in authenticated API requests.
            ///   - registration_date: The date the user registered their account. This is only provided in authenticated API requests.
            internal init(
                hash: Swift.String,
                display_name: Swift.String,
                profile_url: Swift.String,
                avatar_url: Swift.String,
                avatar_alt_text: Swift.String,
                location: Swift.String,
                description: Swift.String,
                job_title: Swift.String,
                company: Swift.String,
                verified_accounts: [Components.Schemas.VerifiedAccount],
                pronunciation: Swift.String,
                pronouns: Swift.String,
                links: [Components.Schemas.Link]? = nil,
                payments: Components.Schemas.Profile.paymentsPayload? = nil,
                contact_info: Components.Schemas.Profile.contact_infoPayload? = nil,
                gallery: [Components.Schemas.GalleryImage]? = nil,
                number_verified_accounts: Swift.Int? = nil,
                last_profile_edit: Foundation.Date? = nil,
                registration_date: Swift.String? = nil
            ) {
                self.hash = hash
                self.display_name = display_name
                self.profile_url = profile_url
                self.avatar_url = avatar_url
                self.avatar_alt_text = avatar_alt_text
                self.location = location
                self.description = description
                self.job_title = job_title
                self.company = company
                self.verified_accounts = verified_accounts
                self.pronunciation = pronunciation
                self.pronouns = pronouns
                self.links = links
                self.payments = payments
                self.contact_info = contact_info
                self.gallery = gallery
                self.number_verified_accounts = number_verified_accounts
                self.last_profile_edit = last_profile_edit
                self.registration_date = registration_date
            }
            internal enum CodingKeys: String, CodingKey {
                case hash
                case display_name
                case profile_url
                case avatar_url
                case avatar_alt_text
                case location
                case description
                case job_title
                case company
                case verified_accounts
                case pronunciation
                case pronouns
                case links
                case payments
                case contact_info
                case gallery
                case number_verified_accounts
                case last_profile_edit
                case registration_date
            }
        }
    }
    /// Types generated from the `#/components/parameters` section of the OpenAPI document.
    internal enum Parameters {}
    /// Types generated from the `#/components/requestBodies` section of the OpenAPI document.
    internal enum RequestBodies {}
    /// Types generated from the `#/components/responses` section of the OpenAPI document.
    internal enum Responses {}
    /// Types generated from the `#/components/headers` section of the OpenAPI document.
    internal enum Headers {}
}

/// API operations, with input and output types, generated from `#/paths` in the OpenAPI document.
internal enum Operations {
    /// Get profile by identifier
    ///
    /// Returns a profile by the given identifier.
    ///
    /// - Remark: HTTP `GET /profiles/{profileIdentifier}`.
    /// - Remark: Generated from `#/paths//profiles/{profileIdentifier}/get(getProfileById)`.
    internal enum getProfileById {
        internal static let id: Swift.String = "getProfileById"
        internal struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/profiles/{profileIdentifier}/GET/path`.
            internal struct Path: Sendable, Hashable {
                /// This can either be an email address, SHA256 hash of an email address, or profile URL slug.
                ///
                /// - Remark: Generated from `#/paths/profiles/{profileIdentifier}/GET/path/profileIdentifier`.
                internal var profileIdentifier: Swift.String
                /// Creates a new `Path`.
                ///
                /// - Parameters:
                ///   - profileIdentifier: This can either be an email address, SHA256 hash of an email address, or profile URL slug.
                internal init(profileIdentifier: Swift.String) {
                    self.profileIdentifier = profileIdentifier
                }
            }
            internal var path: Operations.getProfileById.Input.Path
            /// - Remark: Generated from `#/paths/profiles/{profileIdentifier}/GET/header`.
            internal struct Headers: Sendable, Hashable {
                internal var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getProfileById.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                internal init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.getProfileById.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            internal var headers: Operations.getProfileById.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - path:
            ///   - headers:
            internal init(
                path: Operations.getProfileById.Input.Path,
                headers: Operations.getProfileById.Input.Headers = .init()
            ) {
                self.path = path
                self.headers = headers
            }
        }
        @frozen internal enum Output: Sendable, Hashable {
            internal struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/profiles/{profileIdentifier}/GET/responses/200/content`.
                @frozen internal enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/profiles/{profileIdentifier}/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.Profile)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    internal var json: Components.Schemas.Profile {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                internal var body: Operations.getProfileById.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                internal init(body: Operations.getProfileById.Output.Ok.Body) {
                    self.body = body
                }
            }
            /// Successful response
            ///
            /// - Remark: Generated from `#/paths//profiles/{profileIdentifier}/get(getProfileById)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.getProfileById.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            internal var ok: Operations.getProfileById.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            internal struct NotFound: Sendable, Hashable {
                /// Creates a new `NotFound`.
                internal init() {}
            }
            /// Profile not found
            ///
            /// - Remark: Generated from `#/paths//profiles/{profileIdentifier}/get(getProfileById)/responses/404`.
            ///
            /// HTTP response code: `404 notFound`.
            case notFound(Operations.getProfileById.Output.NotFound)
            /// The associated value of the enum case if `self` is `.notFound`.
            ///
            /// - Throws: An error if `self` is not `.notFound`.
            /// - SeeAlso: `.notFound`.
            internal var notFound: Operations.getProfileById.Output.NotFound {
                get throws {
                    switch self {
                    case let .notFound(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "notFound",
                            response: self
                        )
                    }
                }
            }
            internal struct TooManyRequests: Sendable, Hashable {
                /// Creates a new `TooManyRequests`.
                internal init() {}
            }
            /// Rate limit exceeded
            ///
            /// - Remark: Generated from `#/paths//profiles/{profileIdentifier}/get(getProfileById)/responses/429`.
            ///
            /// HTTP response code: `429 tooManyRequests`.
            case tooManyRequests(Operations.getProfileById.Output.TooManyRequests)
            /// The associated value of the enum case if `self` is `.tooManyRequests`.
            ///
            /// - Throws: An error if `self` is not `.tooManyRequests`.
            /// - SeeAlso: `.tooManyRequests`.
            internal var tooManyRequests: Operations.getProfileById.Output.TooManyRequests {
                get throws {
                    switch self {
                    case let .tooManyRequests(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "tooManyRequests",
                            response: self
                        )
                    }
                }
            }
            internal struct InternalServerError: Sendable, Hashable {
                /// Creates a new `InternalServerError`.
                internal init() {}
            }
            /// Internal server error
            ///
            /// - Remark: Generated from `#/paths//profiles/{profileIdentifier}/get(getProfileById)/responses/500`.
            ///
            /// HTTP response code: `500 internalServerError`.
            case internalServerError(Operations.getProfileById.Output.InternalServerError)
            /// The associated value of the enum case if `self` is `.internalServerError`.
            ///
            /// - Throws: An error if `self` is not `.internalServerError`.
            /// - SeeAlso: `.internalServerError`.
            internal var internalServerError: Operations.getProfileById.Output.InternalServerError {
                get throws {
                    switch self {
                    case let .internalServerError(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "internalServerError",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen internal enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            internal init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            internal var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            internal static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
}
